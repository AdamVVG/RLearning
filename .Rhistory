x
x = str_replace_all(x, "[[:space:]]" , "")
x
forumTabell[1, 'Subject']
str_split(forumTabell[1, 'Subject'], "/\r\n")
split = str_split(forumTabell[1, 'Subject'], "/\r\n")
str_replace_all(split, "[\r\n\t\t\t\t]" , "")
str_replace_all(split[[1]], "[\r\n\t\t\t\t]" , "")
split = str_split(forumTabell[1, 'Subject'], "/\r\n")[[1]]
str_replace_all(split, "[\r\n\t\t\t\t]" , "")
split = str_split(forumTabell[1:2, 'Subject'], "/\r\n")[[1]]
split = str_split(forumTabell[1:2, 'Subject'], "/\r\n")
View(split)
forumTabell['Subject'] %>%
str_split("/\r\n")
forumTabell['Subject']
forumTabell[1:15, 'Subject'] %>%
str_split("/\r\n")
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n")
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
str_replace_all("[\r\n\t\t\t\t]" , "")
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n")
forumTabell[4, 'Subject']
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist()
View(forumTabell)
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "")
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
str_replace_all(x, "[[:space:]]" , "")
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
str_replace_all("[[:space:]]" , "")
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
str_replace_all("[[:space:]]" , "") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
newColumns = c('mainTopic', 'subTopic', 'postCaption')
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
str_replace_all("[[:space:]]" , "") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
View(forumTabell)
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
str_replace_all("[[:space:]]" , " ") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
str_replace_all("[[:space:]]" , "") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
View(forumTabell)
forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "")
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
twimws(which = "both", whitespace = "[[:space:]]") %>% #str_replace_all("[[:space:]]" , "") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
trimws(which = "both", whitespace = "[[:space:]]") %>% #str_replace_all("[[:space:]]" , "") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
View(forumTabell)
"abCd" == "abCd"
"abcd" == "abCd"
html_nodes(html, "[class='forumBoxHeader']") %>% html_text()
html_nodes(html, "[class='tablePager']") %>% html_text()
html_nodes(html, "[class='tablePager']") %>% html_attr('href')
url = 'https://www.avanza.se/placera/forum/start.200.html'
html = read_html(url)
forumTabell = html_table(html, header = TRUE)[[1]]
forumTabell['Text'] = html_nodes(html, "[class='forumBox clearFix lhNormal forumPostText SText']") %>% html_text()    # Posts
forumTabell['Subject'] = html_nodes(html, "[class='forumBoxHeader']") %>% html_text()
newColumns = c('mainTopic', 'subTopic', 'postCaption')
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
trimws(which = "both", whitespace = "[[:space:]]") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
View(forumTabell)
url = 'https://www.avanza.se/placera/forum/start.200.html'
html = read_html(url)
forumTabell = html_table(html, header = TRUE)[[1]]
html_table(html, header = TRUE)
html = read_html(url)
html_table(html, header = TRUE)
url = 'https://www.avanza.se/placera/forum/start.0.html'
html = read_html(url)
View(forumTabell)
forumTabell = html_table(html, header = TRUE)[[1]]
html_nodes(html, "[class='forumTable forumBoxSplitter']")
html_nodes(html, "[class='forumTable forumBoxSplitter']") %>% html_table()
url = 'https://www.avanza.se/placera/forum/start.15.html'
html = read_html(url)
forumTabell = html_table(html, header = TRUE)[[1]]
forumTabell['Text'] = html_nodes(html, "[class='forumBox clearFix lhNormal forumPostText SText']") %>% html_text()    # Posts
forumTabell['Subject'] = html_nodes(html, "[class='forumBoxHeader']") %>% html_text()
View(forumTabell)
html_nodes(html, "[class='tablePager']") %>% html_attr('href')
url = 'https://www.avanza.se/placera/forum/start.150000.html'
html = read_html(url)
forumTabell = html_table(html, header = TRUE)[[1]]
forumTabell['Text'] = html_nodes(html, "[class='forumBox clearFix lhNormal forumPostText SText']") %>% html_text()    # Posts
forumTabell['Subject'] = html_nodes(html, "[class='forumBoxHeader']") %>% html_text()
html_nodes(html, "[class='tablePager']") %>% html_attr('href')
pages = html_nodes(html, "[class='tablePager']") %>% html_attr('href')
newColumns = c('mainTopic', 'subTopic', 'postCaption')
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
trimws(which = "both", whitespace = "[[:space:]]") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
View(forumTabell)
"abcd" + "abCd"
paste("abcd", "abCd", sep="")
url = paste('https://www.avanza.se', startUrl, sep="")
startUrl = '/placera/forum/start.150000.html'
url = paste('https://www.avanza.se', startUrl, sep="")
siteUrl = 'https://www.avanza.se'
url = paste(siteUrl, startUrl, sep="")
url =
page[1]
#url =
page[1]
#url =
pages[1]
url = paste(siteUrl, pages[1], sep="")
forumData = data.frame()
rbind(forumData, forumTabell)
forumData = rbind(forumData, forumTabell)
forumData = rbind(forumData, forumTabell)
forumData = rbind(forumData, forumTabell)
View(forumData)
url = paste(siteUrl, startUrl, sep="")
forumData = data.frame()
for (i in 1:5){
html = read_html(url)
forumTabell = html_table(html, header = TRUE)[[1]]  # Table
forumTabell['Text'] = html_nodes(html, "[class='forumBox clearFix lhNormal forumPostText SText']") %>% html_text()    # Posts
forumTabell['Subject'] = html_nodes(html, "[class='forumBoxHeader']") %>% html_text()   # Subforum
pages = html_nodes(html, "[class='tablePager']") %>% html_attr('href')  # Next page
# Clean Subject-column
newColumns = c('mainTopic', 'subTopic', 'postCaption')
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
trimws(which = "both", whitespace = "[[:space:]]") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
forumData = rbind(forumData, forumTabell)   # Bind data to daraframe
url = paste(siteUrl, pages[1], sep="")  # Create next url
}
View(forumData)
forumTabell
View(forumTabell)
forumTabell['Publicerat']
forumTabell['Publicerat'][1]
forumTabell['Publicerat'][15:1]
forumTabell[1, 'Publicerat']
forumTabell[15:1, 'Publicerat']
View(forumTabell)
forumTabell[15:1, ]
forumTabell = forumTabell[15:1, ]
View(forumTabell)
forumTabell = rbind(forumTabell[15:1, ], forumTabell)
View(forumTabell)
siteUrl = 'https://www.avanza.se'
startUrl = '/placera/forum/start.150000.html'
url = paste(siteUrl, startUrl, sep="")
forumData = data.frame()
# För att scrapea alla sidor:
# 1. börja på sista sidan
# 2. hämta href för föregående sida
# 3. använd som url
# 4. upprepa tills första sidan är nådd
for (i in 1:5){
html = read_html(url)
forumTabell = html_table(html, header = TRUE)[[1]]  # Table
forumTabell['Text'] = html_nodes(html, "[class='forumBox clearFix lhNormal forumPostText SText']") %>% html_text()    # Posts
forumTabell['Subject'] = html_nodes(html, "[class='forumBoxHeader']") %>% html_text()   # Subforum
pages = html_nodes(html, "[class='tablePager']") %>% html_attr('href')  # Next page
# Clean Subject-column
newColumns = c('mainTopic', 'subTopic', 'postCaption')
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
trimws(which = "both", whitespace = "[[:space:]]") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
forumTabell = forumTabell[15:1, ]
forumData = rbind(forumData, forumTabell)   # Bind data to dataframe
url = paste(siteUrl, pages[1], sep="")  # Create next url
}
View(forumData)
rownames(forumData) = NULL
View(forumData)
1+1
Sys.sleep(7)
2+2
runif(0, 10)
runif(1, 0, 10)
runif(1, 0, 10)
runif(1, 0, 10)
runif(1, 0, 10)
runif(1, 3, 10)
runif(1, 3, 10)
runif(1, 3, 10)
runif(1, 3, 10)
Sys.sleep(runif(1, 3, 10))
waitTime = runif(200, 3, 9)
sum(waitTime)
siteUrl = 'https://www.avanza.se'
startUrl = '/placera/forum/start.150000.html'
url = paste(siteUrl, startUrl, sep="")
waitTime = runif(200, 3, 9)
forumData = data.frame()
# För att scrapea alla sidor:
# 1. börja på sista sidan
# 2. hämta href för föregående sida
# 3. använd som url
# 4. upprepa tills första sidan är nådd
for (i in 1:200){
Sys.sleep(waitTime[i])
html = read_html(url)
forumTabell = html_table(html, header = TRUE)[[1]]  # Table
forumTabell['Text'] = html_nodes(html, "[class='forumBox clearFix lhNormal forumPostText SText']") %>% html_text()    # Posts
forumTabell['Subject'] = html_nodes(html, "[class='forumBoxHeader']") %>% html_text()   # Subforum
pages = html_nodes(html, "[class='tablePager']") %>% html_attr('href')  # Next page
# Clean Subject-column
newColumns = c('mainTopic', 'subTopic', 'postCaption')
forumTabell[newColumns] = forumTabell[1:nrow(forumTabell), 'Subject'] %>%
str_split("/\r\n") %>%
unlist() %>%
str_replace_all("[\r\n\t\t\t\t]" , "") %>%
trimws(which = "both", whitespace = "[[:space:]]") %>%
matrix(nrow = nrow(forumTabell), ncol = 3, byrow = TRUE)
forumTabell = forumTabell[15:1, ]
forumData = rbind(forumData, forumTabell)   # Bind data to dataframe
url = paste(siteUrl, pages[1], sep="")  # Create next url
}
rownames(forumData) = NULL
View(forumTabell)
View(forumData)
unique(forumData)
forumDataUnique = unique(forumData)
View(forumDataUnique)
View(forumDataUnique)
count(forumDataUnique, 'Forum')
library('tidyverse')
count(forumDataUnique, 'Forum')
plyr::count(forumDataUnique, 'Forum')
forumDataUnique %>%
plyr::count('Forum') %>%
order(-freq)
forumDataUnique %>%
plyr::count('Forum') %>%
arrange(desc(freq))
x_0 = 2
x_0 = rep(2, 100)
x_1 = rnorm(100, 2, 2)
y = 1*x_0 + 0.8 * x_1 + 0.5 * x_1^2
plot(x_1, y)
y = 1*x_0 + 0.8 * x_1 + 0.5 * x_1^2 + x_1^3
plot(x_1, y)
y = 1*x_0 + 0.8 * x_1 + 0.5 * x_1^2 + x_1^3 + x_1^4
plot(x_1, y)
y = 1*x_0 + 0.8 * x_1 + 0.5 * x_1^2
plot(x_1, y)
y = 1*x_0 + 0.5 * x_1 + 0.8 * x_1^2
plot(x_1, y)
y = 1*x_0 + 0.8 * x_1^2
plot(x_1, y)
dat
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
plot(x, y)
plot(x, y, pch=21, col = 'red')
plot(x, y, pch=19, col = 'red')
plot(x, y, pch=19, col = alpha('red', 0.4))
plot(x, y, pch=19, col = col.alpha('red', 0.4))
?adjustcolor
x <- c(1:5)
color <- c(2,2,3,4,5)
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, col = color, pch = 20, cex = 4)
plot(x, col = color_transparent, pch = 20, cex = 4)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=19, col = color_transparent)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=19, col = color_transparent)
plot(x, y, pch=20, col = color_transparent)
plot(x, y, pch=19, col = color_transparent)
plot(x, y, pch=20, col = color_transparent)
plot(x, y, pch=20, col = color_transparent, cex=4)
plot(x, y, pch=20, col = color_transparent, cex=2)
plot(x, y, pch=20, col = color_transparent, cex=1)
plot(x, y, pch=20, col = color_transparent, cex=0.5)
plot(x, y, pch=20, col = color_transparent, cex=1.2)
plot(x, y, pch=20, col = color_transparent, cex=1.5)
plot(x, y, pch=20, col = color_transparent)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=20, col = color_transparent)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
lines(mod_poly)
lines(x, predict(mod_poly))
predict(mod_poly)
abline(mod_poly)
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
abline(mod_poly)
?predict
predict(x)
predict(mod_poly)
predict(mod_poly, x)
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
lines(x, predict(mod_poly))
?lines
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
lines(x = x, y = predict(mod_poly))
points(x = x, y = predict(mod_poly))
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
points(x = x, y = predict(mod_poly))
line(x = x, y = predict(mod_poly))
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
line(x = x, y = predict(mod_poly))
lines(x = x, y = predict(mod_poly), type = 'l', lty = 1)
predict(mod_poly)
x
as.numeric(predict(mod_poly))
as.numeric(predict(mod_poly))
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
lines(x = x, y = as.numeric(predict(mod_poly)), type = 'l', lty = 1)
data.frame(x, as.numeric(predict(mod_poly)))
polySecondDegree = data.frame(x, as.numeric(predict(mod_poly)))
plot(x, y, pch=20, col = color_transparent)
mod_poly = lm(y ~ poly(x, 2))
polySecondDegree = data.frame(x, as.numeric(predict(mod_poly)))
lines(polySecondDegree)
x  <- seq(-2, 2, 0.05)
y1 <- pnorm(x)
y2 <- pnorm(x, 1, 1)
plot(x, y1, type = "l", col = "red")
plot(x, y2, type = "l", col = "green")
lines(x, y2, type = "l", col = "green")
y1 <- pnorm(x)
y2 <- pnorm(x, 1, 1)
plot(x, y1, type = "l", col = "red")
lines(x, y2, type = "l", col = "green")
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=20, col = color_transparent)
lines(x, predict(mod_poly))
polySecondDegree = data.frame(x, as.numeric(predict(mod_poly)))
polySecondDegree
?order
polySecondDegree[order(x),]
plot(x, y, pch=20, col = color_transparent)
lines(polySecondDegree[order(x),])
lines(polySecondDegree[order(x),], col = 3)
plot(x, y, pch=20, col = color_transparent)
mod_poly2 = lm(y ~ poly(x, 2))
poly2 = data.frame(x, as.numeric(predict(mod_poly2)))
mod_poly3 = lm(y ~ poly(x, 3))
poly3 = data.frame(x, as.numeric(predict(mod_poly3)))
mod_poly4 = lm(y ~ poly(x, 4))
poly4 = data.frame(x, as.numeric(predict(mod_poly4)))
mod_poly5 = lm(y ~ poly(x, 5))
poly5 = data.frame(x, as.numeric(predict(mod_poly5)))
lines(poly2[order(x),], col = 3)
lines(poly3[order(x),], col = 4)
lines(poly4[order(x),], col = 5)
lines(poly5[order(x),], col = 6)
legend()
legend(0.85, 1.5, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1:2, cex=0.8)
legend(0.85, 1.5, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1, cex=0.8)
legend(0.8, 1.5, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1, cex=0.8)
legend(0.8, 1.8, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1, cex=0.8)
legend(0.8, 2.1, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1, cex=0.8)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=20, col = color_transparent)
mod_poly2 = lm(y ~ poly(x, 2))
poly2 = data.frame(x, as.numeric(predict(mod_poly2)))
mod_poly3 = lm(y ~ poly(x, 3))
poly3 = data.frame(x, as.numeric(predict(mod_poly3)))
mod_poly4 = lm(y ~ poly(x, 4))
poly4 = data.frame(x, as.numeric(predict(mod_poly4)))
mod_poly5 = lm(y ~ poly(x, 5))
poly5 = data.frame(x, as.numeric(predict(mod_poly5)))
lines(poly2[order(x),], col = 3)
lines(poly3[order(x),], col = 4)
lines(poly4[order(x),], col = 5)
lines(poly5[order(x),], col = 6)
legend(0.8, 2.1, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1, cex=0.8)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=20, col = color_transparent)
mod_poly2 = lm(y ~ poly(x, 2))
poly2 = data.frame(x, as.numeric(predict(mod_poly2)))
mod_poly3 = lm(y ~ poly(x, 3))
poly3 = data.frame(x, as.numeric(predict(mod_poly3)))
mod_poly4 = lm(y ~ poly(x, 4))
poly4 = data.frame(x, as.numeric(predict(mod_poly4)))
mod_poly5 = lm(y ~ poly(x, 5))
poly5 = data.frame(x, as.numeric(predict(mod_poly5)))
lines(poly2[order(x),], col = 3)
lines(poly3[order(x),], col = 4)
lines(poly4[order(x),], col = 5)
lines(poly5[order(x),], col = 6)
legend(0.8, 2.2, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1, cex=0.8)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
color <- rep(2, length(y))
color_transparent <- adjustcolor(color, alpha.f = 0.3)
plot(x, y, pch=20, col = color_transparent)
mod_poly2 = lm(y ~ poly(x, 2))
poly2 = data.frame(x, as.numeric(predict(mod_poly2)))
mod_poly3 = lm(y ~ poly(x, 3))
poly3 = data.frame(x, as.numeric(predict(mod_poly3)))
mod_poly4 = lm(y ~ poly(x, 4))
poly4 = data.frame(x, as.numeric(predict(mod_poly4)))
mod_poly5 = lm(y ~ poly(x, 5))
poly5 = data.frame(x, as.numeric(predict(mod_poly5)))
lines(poly2[order(x),], col = 3)
lines(poly3[order(x),], col = 4)
lines(poly4[order(x),], col = 5)
lines(poly5[order(x),], col = 6)
legend(0.82, 2.2, legend=c("2nd degree", "3rd degree", "4th degree", "5th degree"),
col=3:6, lty=1, cex=0.8)
pisa
data
data()
